1 循环创建
DELIMITER $$
CREATE
PROCEDURE gaogao()
BEGIN
DECLARE i INT DEFAULT 0;
WHILE i < 40 DO
INSERT INTO procedurehuihui(CODE,NAME,dates)
  VALUES('lover','chang',NOW());
SET i = i + 1;
END WHILE;
END$$
DELIMITER ;

SHOW PROCEDURE STATUS;
CALL gaogao();
SELECT * FROM test.`procedurehuihui`;
-------------------------------------------------------------------------------------------------------------------
  ---------------------------------------------------------------------------------------------------------------
2，动态创建表
SET @sql_create_table = CONCAT(
  'CREATE TABLE IF NOT EXISTS operrecord_', DATE_FORMAT(CURDATE(),'%y%m%d'),
  "(
    `oper_id` int(10) NOT NULL AUTO_INCREMENT,
    `oper_role` int(11) NOT NULL, 
    `oper_type` varchar(30) NOT NULL DEFAULT '',
    `oper_content` varchar(1000) NOT NULL DEFAULT '',
    `oper_cls` int(10) NOT NULL DEFAULT '0',
    `oper_date` datetime NOT NULL,
    `oper_serverid` int(11) NOT NULL DEFAULT '1',
    PRIMARY KEY (`oper_id`)
  ) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8");
  
  PREPARE sql_create_table FROM @sql_create_table;   
  EXECUTE sql_create_table;
  ---------------------------------------------------------------------------------------------------------------
 SET @rId = 'rId', @type ='type01', @content = 'content', @cls = 'cls', @serverid = 'serverid';
  SET @sql_oper_revcord = CONCAT(
  "INSERT INTO operrecord_", DATE_FORMAT(CURDATE(),'%y%m%d'), 
  " (`oper_role`, `oper_type`, `oper_content`, `oper_cls`, `oper_serverid`, `oper_date`) 
    values (@rId, @type, @content, @cls, @serverid, NOW())");
  PREPARE sql_oper_revcord FROM @sql_oper_revcord;   
  EXECUTE sql_oper_revcord;
  
-------------------------------------------------------------------------------------------------------------------
  ---------------------------------------------------------------------------------------------------------------

3，存储过程的输入以及输出
REATE TABLE `fortest` (
  `ID` INT(30) UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
  `IP` VARCHAR(32) NOT NULL,
  `OID` VARCHAR(15) DEFAULT NULL);
 DESC fortest;
 
 DROP PROCEDURE IF EXISTS `autoinsert`;
DELIMITER $$
SET @IP="123",@OID="456"$$
CREATE  PROCEDURE `autoinsert`(IN IP_NUM INT, IN OID_NUM INT)
BEGIN
  DECLARE iIP INT DEFAULT 0 ;
  DECLARE iOID INT DEFAULT 0 ;   
   WHILE(iIP < IP_NUM)
    DO
      SET iOID = 0;
      WHILE(iOID<OID_NUM)
      DO
        SET @mySql=CONCAT("INSERT INTO fortest (IP, OID) VALUES(@IP,@OID)");            
        PREPARE stmt FROM @mySql;
        EXECUTE stmt;  
        DEALLOCATE PREPARE stmt;
        SET iOID = iOID+1;
      END WHILE;
        SET iIP= iIP+1;
    END WHILE;
    END$$
DELIMITER ;
SET @IP_NUM=100,@OID_NUM=50;
CALL autoinsert (@IP_NUM,@OID_NUM);

-------------------------------------------------------------------------------------------------------------------
  ---------------------------------------------------------------------------------------------------------------

4,固定时间查询并删除

DROP TABLE IF EXISTS  `fortest01`;
 CREATE TABLE `fortest01` (
  `ID` INT(30) UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
  `IP` VARCHAR(32) NOT NULL,
  `OID` VARCHAR(15) DEFAULT NULL,
  `regisitertime` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP); 
 DESC fortest01;
 
 DROP PROCEDURE IF EXISTS `autoinsert`;
DELIMITER $$
SET @IP="123",@OID="456"$$
CREATE  PROCEDURE `autoinsert`(IN IP_NUM INT, IN OID_NUM INT)
BEGIN
  DECLARE iIP INT DEFAULT 0 ;
  DECLARE iOID INT DEFAULT 0 ;   
   WHILE(iIP < IP_NUM)
    DO
      SET iOID = 0;
      WHILE(iOID<OID_NUM)
      DO
        SET @mySql=CONCAT("INSERT INTO fortest01 (IP, OID) VALUES(@IP,@OID)");            
        PREPARE stmt FROM @mySql;
        EXECUTE stmt;  
        DEALLOCATE PREPARE stmt;
        SET iOID = iOID+1;
      END WHILE;
        SET iIP= iIP+1;
    END WHILE;
    END$$
DELIMITER ;
SET @IP_NUM=100,@OID_NUM=50;
CALL autoinsert (@IP_NUM,@OID_NUM);

CALL autoinsert (@IP_NUM,@OID_NUM);
DROP PROCEDURE IF EXISTS `NewProc`;
DELIMITER $$
CREATE  PROCEDURE `NewProc`()
BEGIN
SELECT COUNT(*) INTO @count FROM fortest01  WHERE DATE_SUB(regisitertime, INTERVAL 1 DAY)<=NOW();
 IF @count>0
THEN
 SET @today=TIME_TO_SEC(NOW());
 SET @select_sql=CONCAT("select * from fortest01  where DATE_SUB(regisitertime, interval 1 DAY)<=NOW() 
 INTO OUTFILE '/tmp/",@today,".txt'  FIELDS TERMINATED BY ',';");        
 PREPARE charu FROM @select_sql;         
 EXECUTE charu;
 DELETE  FROM fortest01  WHERE DATE_SUB(regisitertime, INTERVAL 1 DAY)<=NOW() ;
 COMMIT;
END IF;
END $$
DELIMITER ;
CALL NewProc;
